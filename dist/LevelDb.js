// Copyright (c) Microsoft Corporation. Licensed under the MIT License.
import*as k from"pako";var u=class{constructor(e,t){this.byteLength=0;this.value=0;this.fileBytes=e,this.startIndex=t;let r=0;for(;this.fileBytes[this.startIndex+r]>=128&&this.startIndex+r<e.length;)r++;for(this.byteLength=r+1,this.value=this.fileBytes[this.startIndex+r];r>0;)this.value*=128,this.value+=this.fileBytes[this.startIndex+r-1]-128,r--}};var I=class{static error(e,t,r){console.error(e)}static assert(e,t,r){e||console.debug(t?"Assertion failed: "+t:"Assertion failed.",r)}},S=class{get unsharedKey(){if(this.unsharedKeyBytes===void 0)return;let e=new DataView(this.unsharedKeyBytes.buffer,this.unsharedKeyBytes.byteOffset,this.unsharedKeyBytes.byteLength);return c.getAsciiString(e,0,e.byteLength)}get key(){if(this.keyCached)return this.keyCached;let e=this.previousKey,t="";e!==void 0&&(t=e.key.substring(0,this.sharedByteLength));let r=this.unsharedKey;return r!==void 0&&(t+=r),this.keyCached=t,t}get keyBytes(){if(!this.unsharedKeyBytes)return;if(this.fullBytesCached)return this.fullBytesCached;if(this.sharedByteLength===void 0||this.sharedByteLength===0)return this.unsharedKeyBytes;if(this.previousKey===void 0)throw new Error("Unexpected shared key without a previous");let e=this.previousKey.keyBytes;if(e===void 0)throw new Error("Unexpected shared key without previous bytes");let t=new Uint8Array(this.sharedByteLength+this.unsharedKeyBytes.length),r=this.sharedByteLength;for(let s=0;s<r;s++)t[s]=e[s];for(let s=0;s<this.unsharedKeyBytes.length;s++)t[s+r]=this.unsharedKeyBytes[s];return this.fullBytesCached=t,t}get isRestart(){return this.sharedByteLength===0}loadFromLdb(e,t,r){this.fileBytes=e,this.startIndex=t;let s=0,i=new u(this.fileBytes,this.startIndex);this.sharedByteLength=i.value,s+=i.byteLength,this.sharedByteLength>0&&(this.previousKey=r);let n=new u(this.fileBytes,this.startIndex+s);s+=n.byteLength;let l=new u(this.fileBytes,this.startIndex+s);s+=l.byteLength,this.unsharedKeyBytes=e.subarray(t+s,t+s+n.value-8),s+=n.value,this.value=e.subarray(t+s,t+s+l.value),s+=l.value,this.length=s}},c=class m{static getAsciiString(e,t,r,s){return m.readStringASCII(e,t,r).str}static getAsciiStringFromUint8Array(e){let t="";for(let r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t}static readStringASCII(e,t,r){var s="",i=0;t=t||0;var n=!1;typeof r>"u"&&(n=!0,r=e.byteLength-e.byteOffset);for(var l,h=0;h<r&&(l=e.getUint8(h+t),!(l===0&&n));h++)s+=String.fromCharCode(l),i++;return{str:s,byteLength:i+(n?1:0)}}},B=class{static getUnsignedInteger(e,t,r,s,i){let n=new ArrayBuffer(4),l=new Uint8Array(n);return l[0]=e,l[1]=t,l[2]=r,l[3]=s,new DataView(n).getUint32(0,i)}static getUnsignedShort(e,t,r){let s=new ArrayBuffer(2),i=new Uint8Array(s);return i[0]=e,i[1]=t,new DataView(s).getUint16(0,r)}},E=class{constructor(e,t,r,s){this.ldbFiles=e,this.logFiles=t,this.manifestFiles=r,this.context=s,this.keys={}}_pushError(e,t){this.isInErrorState=!0,this.errorMessages===void 0&&(this.errorMessages=[]);let r;return t?r=this.context?this.context+"-"+t:t:r=this.context,I.error(e+(r?" "+r:"")),this.errorMessages.push({message:e,context:r}),e}async init(e){this.keys={},this.isInErrorState=!1,this.errorMessages=void 0;for(let i=0;i<this.manifestFiles.length;i++){await this.manifestFiles[i].loadContent(!1);let n=this.manifestFiles[i].content;n instanceof Uint8Array&&n.length>0&&(this.parseManifestContent(n,this.manifestFiles[i].storageRelativePath),e&&await e("Loaded map manifest file '"+this.manifestFiles[i].fullPath+"'."))}let t=[];for(let i=0;i<this.ldbFiles.length;i++){let n=this.ldbFiles[i];try{let l=parseInt(n.name);if(!this.deletedFileNumber||!this.deletedFileNumber.includes(l)){let h=0;if(this.newFileLevel&&this.newFileNumber&&(I.assert(this.newFileLevel.length===this.newFileNumber.length),this.newFileLevel.length===this.newFileNumber.length))for(let d=0;d<this.newFileNumber.length;d++)this.newFileNumber[d]===l&&(h=this.newFileLevel[d]);t.push({index:l,file:n,isDeleted:!1,level:h})}}catch(l){this._pushError("Error including LDB file: "+n.fullPath+" Error: "+l.toString())}}let r=t.sort((i,n)=>i.level===n.level?i.index-n.index:n.level-i.level);for(let i=0;i<r.length;i++){let n=r[i].file;await n.loadContent(!1);let l=n.content;if(l instanceof Uint8Array&&l.length>0){let h=this.parseLdbContent(l,n.storageRelativePath);e&&await e("Loaded map record file '"+n.fullPath+"'. Records: "+h)}}let s=this.logFiles.sort((i,n)=>i.name.localeCompare(n.name));for(let i=0;i<s.length;i++){await s[i].loadContent(!1);let n=s[i].content;if(n instanceof Uint8Array&&n.length>0){let l=this.parseLogContent(n,s[i].storageRelativePath);e&&await e("Loaded map latest-updates file '"+s[i].fullPath+"'. Records: "+l)}}}parseLdbContent(e,t){let r=0;if(e.length<=8||e[e.length-8]!==87||e[e.length-7]!==251||e[e.length-6]!==128||e[e.length-5]!==139||e[e.length-4]!==36||e[e.length-3]!==117||e[e.length-2]!==71||e[e.length-1]!==219){this._pushError("Unexpected bytes in LDB file. File seems unreadable.",t);return}let s=e.length-48,i=new u(e,s);s+=i.byteLength;let n=new u(e,s);s+=n.byteLength;let l=new u(e,s);s+=l.byteLength;let h=new u(e,s);if(s+=h.byteLength,l.value<=0||l.value+h.value>=e.length)return this._pushError("LDB content index offset not within bounds.",t),!1;if(i.value<=0||i.value+n.value>=e.length)return this._pushError("LDB meta index offset not within bounds.",t),!1;let d=e.subarray(l.value,l.value+h.value),a;try{a=k.inflate(d,{raw:!0})}catch{}if(!a)try{a=k.inflate(d)}catch{}if(a||(a=d,this._pushError("Treating level DB content as compressed.",t)),a){let f={};if(!this.parseIndexBytes(a,0,a.length,f,t))return!1;for(let w in f){let y=f[w];if(y&&y.value){let v=y.value,b=0,p=new u(v,b);b+=p.byteLength;let F=new u(v,b);if(b+=F.byteLength,p.value<0||p.value+F.value>=e.length){this._pushError("Block offset does not appear correct",t);return}if(b!==v.length){this._pushError("Index byte index is not correct",t);return}let L=e.subarray(p.value,p.value+F.value),g;try{g=k.inflate(L,{raw:!0})}catch{}if(!g)try{g=k.inflate(L)}catch{}g||(g=L),r+=this.parseLdbBlockBytes(g,0,g.length,t)}else this._pushError("Could not find index key.",t)}}return r===0&&this._pushError("No keys found in LDB.",t),r}parseIndexBytes(e,t,r,s,i){let n=t,l,d=B.getUnsignedInteger(e[r-4],e[r-3],e[r-2],e[r-1],!0)*4+4;for(;n<t+r-d;){let a=new S;a.loadFromLdb(e,n,l);let f=a.key;if(l=a,s[f]=a,a.length===void 0)return this._pushError("Unexpected parse of level key value "+f,i),!1;n+=a.length}return!0}parseLdbBlockBytes(e,t,r,s){let i=t,n=0,l,d=B.getUnsignedInteger(e[r-4],e[r-3],e[r-2],e[r-1],!0)*4+4;if(d>t+r)return this._pushError("Unexpected size received for LDB bytes. File could be corrupt.",s),0;for(;i<t+r-d;){let a=new S;a.loadFromLdb(e,i,l);let f=a.key;if(l=a,this.keys[f]=a,a.length===void 0||a.length<0)throw new Error(this._pushError("Unexpected parse of key "+f,s));n++,i+=a.length}return n}parseLogContent(e,t){let r=0,s,i=0;for(;r<e.length-6;){let n=B.getUnsignedShort(e[r+4],e[r+5],!0),l=e[r+6];if(r+=7,l===1)i+=this.addValueFromLog(e,r,n,t);else if(l===2)s=new Uint8Array(e.buffer,r,n);else if(l===3||l===4)if(s!==void 0){let d=new Uint8Array(e.buffer,r,n),a=new Uint8Array(s.byteLength+d.byteLength);a.set(s),a.set(d,s.byteLength),s=a,l===4&&(i+=this.addValueFromLog(s,0,s.length,t))}else{this._pushError("Unexpected middle to a set of bytes found within LevelDB content. File seems unreadable.",t);return}else{this._pushError("Unexpected type for log file. File seems unreadable.",t);return}r+=n;let h=32768-r%32768;for(;h<=6&&h>0;)h--,e[r]!==0&&this._pushError("Unexpectedly found a padding trailer with data",t),r++}return i<=0&&this._pushError("Did not find any keys in log file",t),i}addValueFromLog(e,t,r,s){let i=t;t+=12;let n=0;for(;t<=i+r-5;){let l=e[t];t++;let h=new u(e,t);t+=h.byteLength;let d=new Uint8Array(h.value);for(let a=0;a<h.value;a++)d[a]=e[t+a];if(t+=h.value,t>e.length&&this._pushError("Unexpected log file length issue.",s),t<=e.length){let a=c.getAsciiStringFromUint8Array(d);if(a===void 0&&this._pushError("Unexpected empty key in a log file. File could be unreadable.",s),n++,l){t>=e.length&&this._pushError("Unexpectedly leftover content in a log file. File could be unreadable.",s);let f=new u(e,t);if(t+=f.byteLength,f.value+t<=e.buffer.byteLength){let w=new Uint8Array(e.buffer,t,f.value);t+=f.value;let y=new S;y.sharedKey="",y.keyDelta=a,y.unsharedKeyBytes=d,y.value=w,this.keys[a]=y}}else this.keys[a]=!1}}return n}parseManifestContent(e,t){let r=0,s;for(this.comparator=void 0,this.logNumber=void 0,this.nextFileNumber=void 0,this.lastSequence=void 0,this.compactPointerLevels=void 0,this.compactPointerStrings=void 0,this.deletedFileLevel=void 0,this.deletedFileNumber=void 0,this.newFileLevel=void 0,this.newFileNumber=void 0,this.newFileSize=void 0,this.newFileSmallest=void 0,this.newFileLargest=void 0;r<e.length-6;){let i=B.getUnsignedShort(e[r+4],e[r+5],!0),n=e[r+6];if(r+=7,n===1)this.addValueFromManifest(e,r,i);else if(n===2)s=new Uint8Array(e.buffer,r,i);else if(n===3||n===4)if(s!==void 0){let h=new Uint8Array(e.buffer,r,i),d=new Uint8Array(s.byteLength+h.byteLength);d.set(s),d.set(h,s.byteLength),s=d,n===4&&this.addValueFromManifest(s,0,s.length)}else{this._pushError("Unexpected middle to a set of bytes found within a manifest file. File could be unreadable.",t);return}else{this._pushError("Unexpected type for manifest file.  File could be unreadable.",t);return}r+=i;let l=32768-r%32768;for(;l<=6&&l>0;)l--,e[r]!==0&&this._pushError("Unexpectedly found a padding trailer with data in a manifest file.",t),r++}}addValueFromManifest(e,t,r,s){let i=t;for(;t<i+r;){let n=new u(e,t);switch(t+=n.byteLength,n.value){case 1:let l=new u(e,t);t+=l.byteLength;let h=new Uint8Array(l.value);for(let o=0;o<l.value;o++)h[o]=e[t+o];t+=l.value,t>e.length&&this._pushError("Unexpected manifest file length issue.",s),this.comparator=c.getAsciiStringFromUint8Array(h),this.comparator===void 0&&this._pushError("Unexpected comparator.",s);break;case 2:let d=new u(e,t);t+=d.byteLength,this.logNumber=d.value;break;case 3:let a=new u(e,t);t+=a.byteLength,this.nextFileNumber=a.value;break;case 4:let f=new u(e,t);t+=f.byteLength,this.lastSequence=f.value;break;case 5:this.compactPointerLevels===void 0&&(this.compactPointerLevels=[]),this.compactPointerStrings===void 0&&(this.compactPointerStrings=[]);let w=new u(e,t);t+=w.byteLength,this.compactPointerLevels.push(w.value);let y=new u(e,t);t+=y.byteLength;let v=new Uint8Array(y.value);for(let o=0;o<y.value;o++)v[o]=e[t+o];t+=y.value,t>e.length&&this._pushError("Unexpected manifest file length issue at compact pointer.",s),this.compactPointerStrings.push(c.getAsciiStringFromUint8Array(v)),this.compactPointerStrings[this.compactPointerStrings.length-1]===void 0&&this._pushError("Unexpected compact pointer string.",s);break;case 6:this.deletedFileLevel===void 0&&(this.deletedFileLevel=[]),this.deletedFileNumber===void 0&&(this.deletedFileNumber=[]);let b=new u(e,t);t+=b.byteLength,this.deletedFileLevel.push(b.value);let p=new u(e,t);t+=p.byteLength,this.deletedFileNumber.push(p.value);break;case 7:this.newFileLargest===void 0&&(this.newFileLargest=[]),this.newFileLevel===void 0&&(this.newFileLevel=[]),this.newFileNumber===void 0&&(this.newFileNumber=[]),this.newFileSmallest===void 0&&(this.newFileSmallest=[]),this.newFileSize===void 0&&(this.newFileSize=[]);let F=new u(e,t);t+=F.byteLength,this.newFileLevel.push(F.value);let L=new u(e,t);t+=L.byteLength,this.newFileNumber.push(L.value);let g=new u(e,t);t+=g.byteLength,this.newFileSize.push(g.value);let U=new u(e,t);t+=U.byteLength;let C=new Uint8Array(U.value);for(let o=0;o<U.value;o++)C[o]=e[t+o];t+=U.value,t>e.length&&this._pushError("Unexpected manifest file length issue at new file smallest.",s),this.newFileSmallest.push(c.getAsciiStringFromUint8Array(C)),this.newFileSmallest[this.newFileSmallest.length-1]===void 0&&this._pushError("Unexpected file smallest tag string.",s);let A=new u(e,t);t+=A.byteLength;let N=new Uint8Array(A.value);for(let o=0;o<A.value;o++)N[o]=e[t+o];t+=A.value,t>e.length&&this._pushError("Unexpected manifest file length issue at new file largest.",s),this.newFileLargest.push(c.getAsciiStringFromUint8Array(N)),this.newFileLargest[this.newFileLargest.length-1]===void 0&&this._pushError("Unexpected file largest tag string.",s);break;case 9:let _=new u(e,t);t+=_.byteLength,this.previousLogNumber=_.value;break;default:this._pushError("Unexpected manifest item: "+n.value,s)}}}};export{E as default};
